// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mapStateToProps tests should work with new exercises 1`] = `
Object {
  "exercisesToRecord": Array [
    Object {
      "id": "-L5GDNmo8uZxet9S7mE2",
      "reps": 12,
      "timeStamp": 1518407604,
      "type": "Bicep Curls",
      "weight": 35,
    },
    Object {
      "id": "-L5GDeJnjbOj1SkQRJK8",
      "reps": 5,
      "timeStamp": 1518407604,
      "type": "Shoulder Press",
      "weight": 15,
    },
    Object {
      "id": "-L5GDeeBKCPlTnm-yCiX",
      "reps": 6,
      "timeStamp": 1518407604,
      "type": "Lateral Raises",
      "weight": 45,
    },
  ],
  "record": Object {
    "isLoading": false,
    "modifiedExercises": Object {
      "-L5GDNmo8uZxet9S7mE2": Object {
        "reps": 12,
        "weight": 35,
      },
      "-L5GDeJnjbOj1SkQRJK8": Object {
        "reps": 5,
        "weight": 15,
      },
      "-L5GDeeBKCPlTnm-yCiX": Object {
        "reps": 6,
        "weight": 45,
      },
    },
  },
}
`;

exports[`render tests doesnt crash 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#FB8C00",
            "flexDirection": "row",
            "height": 50,
            "justifyContent": "space-around",
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#FBE9E7",
              "fontSize": 20,
              "textAlign": "center",
              "width": 100,
            },
            undefined,
          ]
        }
      >
        Exercise
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#FBE9E7",
              "fontSize": 20,
              "textAlign": "center",
              "width": 75,
            },
            undefined,
          ]
        }
      >
        Reps
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#FBE9E7",
              "fontSize": 20,
              "textAlign": "center",
              "width": 75,
            },
            undefined,
          ]
        }
      >
        Weight
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#FBE9E7",
              "fontSize": 20,
              "textAlign": "center",
              "width": 75,
            },
            undefined,
          ]
        }
      >
        Submit
      </Text>
    </View>
    <RCTScrollView
      data={
        Array [
          Object {
            "id": "1",
            "reps": 12,
            "timeStamp": 1518407604,
            "type": "Bicep Curls",
            "weight": 35,
          },
          Object {
            "id": "2",
            "reps": 5,
            "timeStamp": 1518407604,
            "type": "Shoulder Press",
            "weight": 15,
          },
          Object {
            "id": "3",
            "reps": 6,
            "timeStamp": 1518407604,
            "type": "Lateral Raises",
            "weight": 45,
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 1,
                  "flexDirection": "row",
                  "height": 70,
                  "justifyContent": "space-around",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 100,
                  },
                  undefined,
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                Bicep Curls
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                5:46:47 am
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 75,
                  },
                  undefined,
                ]
              }
            >
              <TextInput
                allowFontScaling={true}
                keyboardType="numeric"
                maxLength={2}
                onChangeText={[Function]}
                style={
                  Array [
                    Object {
                      "borderColor": "gray",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "fontSize": 18,
                      "height": 40,
                      "textAlign": "center",
                      "width": 40,
                    },
                    undefined,
                  ]
                }
                value="12"
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 75,
                  },
                  undefined,
                ]
              }
            >
              <TextInput
                allowFontScaling={true}
                keyboardType="numeric"
                maxLength={2}
                onChangeText={[Function]}
                style={
                  Array [
                    Object {
                      "borderColor": "gray",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "fontSize": 18,
                      "height": 40,
                      "textAlign": "center",
                      "width": 40,
                    },
                    undefined,
                  ]
                }
                value="35"
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 75,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={null}
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#9CCC65",
                          "borderRadius": 4,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingBottom": 5,
                          "paddingLeft": 5,
                          "paddingRight": 5,
                          "paddingTop": 5,
                        },
                        null,
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "white",
                            "fontSize": 18,
                          },
                          undefined,
                        ]
                      }
                    >
                      Submit
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 1,
                  "flexDirection": "row",
                  "height": 70,
                  "justifyContent": "space-around",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 100,
                  },
                  undefined,
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                Shoulder Press
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                5:46:47 am
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 75,
                  },
                  undefined,
                ]
              }
            >
              <TextInput
                allowFontScaling={true}
                keyboardType="numeric"
                maxLength={2}
                onChangeText={[Function]}
                style={
                  Array [
                    Object {
                      "borderColor": "gray",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "fontSize": 18,
                      "height": 40,
                      "textAlign": "center",
                      "width": 40,
                    },
                    undefined,
                  ]
                }
                value="5"
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 75,
                  },
                  undefined,
                ]
              }
            >
              <TextInput
                allowFontScaling={true}
                keyboardType="numeric"
                maxLength={2}
                onChangeText={[Function]}
                style={
                  Array [
                    Object {
                      "borderColor": "gray",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "fontSize": 18,
                      "height": 40,
                      "textAlign": "center",
                      "width": 40,
                    },
                    undefined,
                  ]
                }
                value="15"
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 75,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={null}
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#9CCC65",
                          "borderRadius": 4,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingBottom": 5,
                          "paddingLeft": 5,
                          "paddingRight": 5,
                          "paddingTop": 5,
                        },
                        null,
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "white",
                            "fontSize": 18,
                          },
                          undefined,
                        ]
                      }
                    >
                      Submit
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 1,
                  "flexDirection": "row",
                  "height": 70,
                  "justifyContent": "space-around",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 100,
                  },
                  undefined,
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                Lateral Raises
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              >
                5:46:47 am
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 75,
                  },
                  undefined,
                ]
              }
            >
              <TextInput
                allowFontScaling={true}
                keyboardType="numeric"
                maxLength={2}
                onChangeText={[Function]}
                style={
                  Array [
                    Object {
                      "borderColor": "gray",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "fontSize": 18,
                      "height": 40,
                      "textAlign": "center",
                      "width": 40,
                    },
                    undefined,
                  ]
                }
                value="6"
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 75,
                  },
                  undefined,
                ]
              }
            >
              <TextInput
                allowFontScaling={true}
                keyboardType="numeric"
                maxLength={2}
                onChangeText={[Function]}
                style={
                  Array [
                    Object {
                      "borderColor": "gray",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "fontSize": 18,
                      "height": 40,
                      "textAlign": "center",
                      "width": 40,
                    },
                    undefined,
                  ]
                }
                value="45"
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": 75,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={null}
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#9CCC65",
                          "borderRadius": 4,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingBottom": 5,
                          "paddingLeft": 5,
                          "paddingRight": 5,
                          "paddingTop": 5,
                        },
                        null,
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "color": "white",
                            "fontSize": 18,
                          },
                          undefined,
                        ]
                      }
                    >
                      Submit
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
